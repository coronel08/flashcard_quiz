[{"/home/fidel/code/flashcard_quiz/frontend/src/index.js":"1","/home/fidel/code/flashcard_quiz/frontend/src/App.js":"2","/home/fidel/code/flashcard_quiz/frontend/src/sampleData.js":"3","/home/fidel/code/flashcard_quiz/frontend/src/Flashcard.js":"4"},{"size":218,"mtime":1623099386908,"results":"5","hashOfConfig":"6"},{"size":3829,"mtime":1624568633254,"results":"7","hashOfConfig":"6"},{"size":11830,"mtime":1623102809858,"results":"8","hashOfConfig":"6"},{"size":1375,"mtime":1623177448238,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sh6r8t",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/fidel/code/flashcard_quiz/frontend/src/index.js",[],"/home/fidel/code/flashcard_quiz/frontend/src/App.js",["19"],"import React, { useState, useEffect, useRef } from 'react';\nimport Flashcard from './Flashcard'\nimport axios from 'axios'\nimport data from './sampleData'\nimport './App.css'\n\n/* \nport is typically 8000 but used 8001 for reverse proxy\nhttp://localhost:8000/api/v2/quizzes/       has all quizzes and # of questions\nhttp://localhost:8000/api/v2/questions/     has all questions quiz title and answers\nhttp://localhost:8000/api/v2/answers/       has all answers \nhttp://localhost:8000/api/v2/quizzes/1/all_questions/ all questions by quiz\n*/\n\nfunction App() {\n    const categoryElement = useRef()\n    // const [quizzes, setQuizzes] = useState([])\n    const [category, setCategory] = useState([])\n\n    // SAMPLE DATA FOR TESTING \n    const [quizzes, setQuizzes] = useState(data)\n    useEffect(() => {\n        setQuizzes(quizzes.map((questionItem, index) => {\n            const correctAnswer = questionItem.answers.filter(options => options.correct.toString() === 'true').map(options => {\n                return options.text\n            })\n            const allAnswers = questionItem.answers.map(options => {\n                return <p key={options.id}> - {options.text} </p>\n            })\n            return {\n                id: `${index}-${Date.now()}`,\n                quiz: questionItem.quiz_title,\n                prompt: questionItem.prompt,\n                allAnswers,\n                correctAnswer,\n            }\n        }))\n    }, [])\n\n\n    useEffect(() => {\n        axios\n            .get('http://localhost:8001/api/v2/quizzes/')\n            .then(res => {\n                setCategory(res.data)\n            })\n    })\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        axios\n            .get(`http://localhost:8001/api/v2/quizzes/${categoryElement.current.value}/all_questions/`)\n            .then(res => {\n                setQuizzes(res.data.map((questionItem, index) => {\n                    const correctAnswer = questionItem.answers.filter(options => options.correct.toString() === 'true').map(options => {\n                        return options.text\n                    })\n                    const allAnswers = questionItem.answers.map(options => {\n                        return <p key={options.id}> - {options.text} </p>\n                    })\n                    return {\n                        id: `${index}-${Date.now()}`,\n                        quiz: questionItem.quiz_title,\n                        prompt: questionItem.prompt,\n                        allAnswers,\n                        correctAnswer,\n                    }\n                }))\n                // https://stackoverflow.com/questions/61909924/rendering-json-child-list-from-object-list-in-reactjs\n                console.log(res.data)\n            })\n        }\n\nreturn (\n    <div className=\"App\">\n        <h1>Heading</h1>\n        {/* Select Quiz Section */}\n        <form className=\"header\" onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                <label htmlFor=\"category\">Category</label>\n                <select id=\"category\" ref={categoryElement}>\n                    {category.map(cat => {\n                        return <option value={cat.id} key={cat.id}>{cat.title} Question-count:{cat.question_count}</option>\n                    })}\n                </select>\n            </div>\n            <div className=\"form-group\">\n                <button className=\"btn\">Submit</button>\n            </div>\n        </form>\n        {/* Pass quiz info to flashcard */}\n        <div className=\"container\">\n            <div className=\"card-grid\">\n                {quizzes.map(function (quiz, index) {\n                    return (\n                        < Flashcard flashcard={quiz} key={quiz.id} />\n                    )\n                })}\n            </div>\n\n        </div>\n    </div>\n)\n}\n\nexport default App\n","/home/fidel/code/flashcard_quiz/frontend/src/sampleData.js",[],"/home/fidel/code/flashcard_quiz/frontend/src/Flashcard.js",[],{"ruleId":"20","severity":1,"message":"21","line":38,"column":8,"nodeType":"22","endLine":38,"endColumn":10,"suggestions":"23"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'quizzes'. Either include it or remove the dependency array. You can also do a functional update 'setQuizzes(q => ...)' if you only need 'quizzes' in the 'setQuizzes' call.","ArrayExpression",["24"],{"desc":"25","fix":"26"},"Update the dependencies array to be: [quizzes]",{"range":"27","text":"28"},[1434,1436],"[quizzes]"]